# git helpers
alias gittracked='git ls-tree --full-tree -r --name-only HEAD' # list tracked
alias gitc='git commit -am' # changes and deletions
alias gitca='git add . && git commit -m' # stage and commit all files

# Faster python and R
alias py='python3'
alias r="Rscript"

# Open text editors
alias v='nvim' # neovim
alias vim='nvim'
# Shell helpers
alias lsa='eza -alh --group-directories-first' # list files with all info
alias sl='eza -alh --group-directories-first' # list files with all info
alias lss='eza -ah --icons --group-directories-first' # list all files
alias lst='eza --tree --icons' # list a directory tree
alias lsp='eza --tree --icons --ignore-glob="*.pyc|__pycache__"' # list a directory tree without pyc files
alias cl='clear'
alias cat='bat --theme="Catppuccin-mocha"' # use bat as cat
alias cnt='find . -type f | wc -l'
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias rm="rm -i"
alias ran="source ranger"
alias cop="gh copilot suggest"

alias mnt="mount | awk -F' ' '{ printf \"%s\t%s\n\",\$1,\$3; }' | column -t | rg ^/dev/ | sort" # list mounted drives only
alias copy='rsync -ah --info=progress2' # copy with progress bar
alias trs='gio trash' # put something into the trash

alias mtrx='cmatrix -abrks'

# System utilities
alias update='$scriptspath/updater.sh'
alias clean='$scriptspath/cleaner.sh'
alias backuphome='$scriptspath/borgbackup_home.sh'
alias pacman="sudo pacman --color auto"


# Temporary aliases
alias lsync='~/.scripts/synclab.sh'

# Hyprland toggle mirror
alias mirror='hyprctl keyword monitor ,preferred,auto,1,mirror,eDP-1'
alias unmirror='hyprctl keyword monitor ,preferred,auto,1'

# remote hacking on wayland machines
wssh () {
    waypipe ssh $1 env QT_QPA_PLATFORM="wayland-egl" QT_QPA_PLATFORMTHEME="KDE" $2
}

# FUNCTIONS --------------------------------------------------------------------

# Backup a directory with rsync. Syntax is backup <source> <backupdir>.
backup () {
    sudo rsync -aAXv --delete --exclude='/dev/*' --exclude='/proc/*' --exclude='/sys/*' --exclude='/tmp/*' --exclude='/run/*' --exclude='/mnt/*' --exclude='/media/*' --exclude='/home/*' --exclude='/lost+found' "$1" "$2"
}
# Restore a directory with rsync. Syntax is restore <backupdir> <restoredir>.
restore () {
    sudo rsync -aAXv --delete $1 $2
}

# Append pdf to each other
pdfappend () {
    gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile="$3" "$1" "$2"
}

# show the list of packages that need this package - depends mpv as example
function_depends()  {
    search=$(echo "$1")
    sudo pacman -Sii $search | grep "Required" | sed -e "s/Required By     : //g" | sed -e "s/  /\n/g"
    }
alias depends='function_depends'

# # ex = EXtractor for all kinds of archives
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   tar xf $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# find in file with fzf and ripgrep
fif() {
  if [ ! "$#" -gt 0 ]; then echo "Need a string to search for!"; return 1; fi
  rg --files-with-matches --no-messages "$1" | fzf --preview "highlight -O ansi -l {} 2> /dev/null | rg --colors 'match:bg:yellow' --ignore-case --pretty --context 10 '$1' || rg --ignore-case --pretty --context 10 '$1' {}"
}
